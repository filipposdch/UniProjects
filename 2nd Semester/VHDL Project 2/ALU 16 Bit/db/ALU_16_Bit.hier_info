|ALU_16_Bit
A[0] => ALU:ALULoop:0:alu_1_bit.A
A[1] => ALU:ALULoop:1:alu_1_bit.A
A[2] => ALU:ALULoop:2:alu_1_bit.A
A[3] => ALU:ALULoop:3:alu_1_bit.A
A[4] => ALU:ALULoop:4:alu_1_bit.A
A[5] => ALU:ALULoop:5:alu_1_bit.A
A[6] => ALU:ALULoop:6:alu_1_bit.A
A[7] => ALU:ALULoop:7:alu_1_bit.A
A[8] => ALU:ALULoop:8:alu_1_bit.A
A[9] => ALU:ALULoop:9:alu_1_bit.A
A[10] => ALU:ALULoop:10:alu_1_bit.A
A[11] => ALU:ALULoop:11:alu_1_bit.A
A[12] => ALU:ALULoop:12:alu_1_bit.A
A[13] => ALU:ALULoop:13:alu_1_bit.A
A[14] => ALU:ALULoop:14:alu_1_bit.A
A[15] => ALU:lastALU.A
B[0] => ALU:ALULoop:0:alu_1_bit.B
B[1] => ALU:ALULoop:1:alu_1_bit.B
B[2] => ALU:ALULoop:2:alu_1_bit.B
B[3] => ALU:ALULoop:3:alu_1_bit.B
B[4] => ALU:ALULoop:4:alu_1_bit.B
B[5] => ALU:ALULoop:5:alu_1_bit.B
B[6] => ALU:ALULoop:6:alu_1_bit.B
B[7] => ALU:ALULoop:7:alu_1_bit.B
B[8] => ALU:ALULoop:8:alu_1_bit.B
B[9] => ALU:ALULoop:9:alu_1_bit.B
B[10] => ALU:ALULoop:10:alu_1_bit.B
B[11] => ALU:ALULoop:11:alu_1_bit.B
B[12] => ALU:ALULoop:12:alu_1_bit.B
B[13] => ALU:ALULoop:13:alu_1_bit.B
B[14] => ALU:ALULoop:14:alu_1_bit.B
B[15] => ALU:lastALU.B
OPCODE[0] => Equal0.IN2
OPCODE[0] => Equal1.IN2
OPCODE[0] => Equal2.IN1
OPCODE[0] => Equal3.IN2
OPCODE[0] => Equal4.IN1
OPCODE[0] => Equal5.IN0
OPCODE[1] => Equal0.IN1
OPCODE[1] => Equal1.IN1
OPCODE[1] => Equal2.IN2
OPCODE[1] => Equal3.IN0
OPCODE[1] => Equal4.IN0
OPCODE[1] => Equal5.IN2
OPCODE[2] => Equal0.IN0
OPCODE[2] => Equal1.IN0
OPCODE[2] => Equal2.IN0
OPCODE[2] => Equal3.IN1
OPCODE[2] => Equal4.IN2
OPCODE[2] => Equal5.IN1
overflow <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
result[0] <= ALU:ALULoop:0:alu_1_bit.result
result[1] <= ALU:ALULoop:1:alu_1_bit.result
result[2] <= ALU:ALULoop:2:alu_1_bit.result
result[3] <= ALU:ALULoop:3:alu_1_bit.result
result[4] <= ALU:ALULoop:4:alu_1_bit.result
result[5] <= ALU:ALULoop:5:alu_1_bit.result
result[6] <= ALU:ALULoop:6:alu_1_bit.result
result[7] <= ALU:ALULoop:7:alu_1_bit.result
result[8] <= ALU:ALULoop:8:alu_1_bit.result
result[9] <= ALU:ALULoop:9:alu_1_bit.result
result[10] <= ALU:ALULoop:10:alu_1_bit.result
result[11] <= ALU:ALULoop:11:alu_1_bit.result
result[12] <= ALU:ALULoop:12:alu_1_bit.result
result[13] <= ALU:ALULoop:13:alu_1_bit.result
result[14] <= ALU:ALULoop:14:alu_1_bit.result
result[15] <= ALU:lastALU.result


|ALU_16_Bit|ALU:\ALULoop:0:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:0:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:0:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:0:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:0:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:1:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:1:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:1:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:1:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:1:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:2:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:2:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:2:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:2:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:2:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:3:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:3:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:3:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:3:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:3:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:4:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:4:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:4:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:4:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:4:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:5:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:5:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:5:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:5:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:5:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:6:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:6:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:6:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:6:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:6:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:7:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:7:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:7:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:7:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:7:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:8:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:8:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:8:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:8:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:8:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:9:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:9:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:9:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:9:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:9:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:10:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:10:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:10:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:10:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:10:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:11:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:11:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:11:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:11:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:11:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:12:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:12:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:12:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:12:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:12:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:13:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:13:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:13:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:13:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:13:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:14:alu_1_bit
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:\ALULoop:14:alu_1_bit|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:14:alu_1_bit|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:14:alu_1_bit|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:\ALULoop:14:alu_1_bit|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:lastALU
A => multiplexer2to1:mux1.inputA
A => multiplexer2to1:mux1.inputB
B => multiplexer2to1:mux2.inputA
B => multiplexer2to1:mux2.inputB
Ainvert => multiplexer2to1:mux1.s
Binvert => multiplexer2to1:mux2.s
carryIn => full_adder:fadder.carryIn
operation[0] => multiplexer5to1:mux5to1.S[0]
operation[1] => multiplexer5to1:mux5to1.S[1]
operation[2] => multiplexer5to1:mux5to1.S[2]
carryOut <= full_adder:fadder.carryOut
result <= multiplexer5to1:mux5to1.F


|ALU_16_Bit|ALU:lastALU|multiplexer2to1:mux1
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:lastALU|multiplexer2to1:mux2
inputA => f.IN0
inputB => f.IN0
s => f.IN1
s => f.IN1
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:lastALU|full_adder:fadder
A => sum.IN0
A => carryOut.IN0
A => carryOut.IN0
A => sum.IN0
A => sum.IN0
B => sum.IN1
B => carryOut.IN0
B => carryOut.IN1
B => sum.IN1
B => sum.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryIn => carryOut.IN1
carryIn => carryOut.IN1
carryIn => sum.IN1
carryIn => sum.IN1
carryOut <= carryOut.DB_MAX_OUTPUT_PORT_TYPE
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE


|ALU_16_Bit|ALU:lastALU|multiplexer5to1:mux5to1
A => Mux0.IN0
B => Mux0.IN1
C => Mux0.IN2
D => Mux0.IN3
E => Mux0.IN4
E => Mux0.IN5
E => Mux0.IN6
E => Mux0.IN7
S[0] => Mux0.IN10
S[1] => Mux0.IN9
S[2] => Mux0.IN8
F <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


