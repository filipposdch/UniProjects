/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 40.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("ALU_vlg_vec_tst|A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|Ainvert")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|Binvert")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|carryIn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|operation")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|operation[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ALU_vlg_vec_tst|operation";
}

SIGNAL("ALU_vlg_vec_tst|operation[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ALU_vlg_vec_tst|operation";
}

SIGNAL("ALU_vlg_vec_tst|operation[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ALU_vlg_vec_tst|operation";
}

SIGNAL("ALU_vlg_vec_tst|carryOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|sampler")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|gnd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|vcc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|unknown")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|devclrn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|devpor")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|devoe")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|Ainvert~combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|A~combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|B~combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|Binvert~combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|mux2|f~0_combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|carryIn~combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|fadder|carryOut~0_combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|mux5to1|Mux0~2_combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|mux5to1|Mux0~6_combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|mux5to1|Mux0~3_combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|mux5to1|Mux0~4_combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|mux5to1|Mux0~5_combout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|operation~combout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|operation~combout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALU_vlg_vec_tst|i1|operation~combout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("ALU_vlg_vec_tst|A")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|Ainvert")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|B")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|Binvert")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|carryIn")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|operation[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|operation[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|operation[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|carryOut")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|sampler")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|gnd")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|vcc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|unknown")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|devclrn")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|devpor")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|devoe")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|Ainvert~combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|A~combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|B~combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|Binvert~combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|mux2|f~0_combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|carryIn~combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|fadder|carryOut~0_combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|mux5to1|Mux0~2_combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|mux5to1|Mux0~6_combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|mux5to1|Mux0~3_combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|mux5to1|Mux0~4_combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|mux5to1|Mux0~5_combout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|operation~combout[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|operation~combout[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("ALU_vlg_vec_tst|i1|operation~combout[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|Ainvert";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|Binvert";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|carryIn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|operation";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|operation[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|operation[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|operation[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|carryOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|sampler";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|gnd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|vcc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|unknown";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|devclrn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|devpor";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|devoe";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|Ainvert~combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|A~combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|B~combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|Binvert~combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|mux2|f~0_combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|carryIn~combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|fadder|carryOut~0_combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|mux5to1|Mux0~2_combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|mux5to1|Mux0~6_combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|mux5to1|Mux0~3_combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|mux5to1|Mux0~4_combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|mux5to1|Mux0~5_combout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|operation~combout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|operation~combout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_vlg_vec_tst|i1|operation~combout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
}
;
